// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Presentazione.DBContexts;

namespace Presentazione.Migrations
{
    [DbContext(typeof(IlBelloContext))]
    [Migration("20200506184921_LaMigration")]
    partial class LaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Presentazione.Models.Diapograph", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("diapositivaid")
                        .HasColumnType("bigint");

                    b.Property<string>("dimensione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("idGraph")
                        .HasColumnType("bigint");

                    b.Property<string>("posizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("diapositivaid");

                    b.ToTable("DiapoGraph");
                });

            modelBuilder.Entity("Presentazione.Models.Diapositiva", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("coloreT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dimensioneT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isTitolo")
                        .HasColumnType("bit");

                    b.Property<int>("ordine")
                        .HasColumnType("int");

                    b.Property<string>("posizioneT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("presentazioneId")
                        .HasColumnType("bigint");

                    b.Property<bool>("preset")
                        .HasColumnType("bit");

                    b.Property<string>("ratio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sfondo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titolo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("presentazioneId");

                    b.ToTable("Diapositiva");
                });

            modelBuilder.Entity("Presentazione.Models.PresModel", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ultimaModifica")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Presentazione");
                });

            modelBuilder.Entity("Presentazione.Models.Testo", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("colore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("diapositivaid")
                        .HasColumnType("bigint");

                    b.Property<string>("dimensione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fontSize")
                        .HasColumnType("int");

                    b.Property<int>("fontStyle")
                        .HasColumnType("int");

                    b.Property<string>("posizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("diapositivaid");

                    b.ToTable("Testo");
                });

            modelBuilder.Entity("Presentazione.Models.Diapograph", b =>
                {
                    b.HasOne("Presentazione.Models.Diapositiva", "diapositiva")
                        .WithMany()
                        .HasForeignKey("diapositivaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Presentazione.Models.Diapositiva", b =>
                {
                    b.HasOne("Presentazione.Models.PresModel", "presentazione")
                        .WithMany()
                        .HasForeignKey("presentazioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Presentazione.Models.Testo", b =>
                {
                    b.HasOne("Presentazione.Models.Diapositiva", "diapositiva")
                        .WithMany()
                        .HasForeignKey("diapositivaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
